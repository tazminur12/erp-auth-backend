═══════════════════════════════════════════════════════════════════
  LOAN TRANSACTION SETUP - Frontend Developer এর জন্য Guide
═══════════════════════════════════════════════════════════════════

আপনি যখন loan system এর frontend তৈরি করবেন, তখন এই guide follow করুন:


═══════════════════════════════════════════════════════════════════
1. LOAN GIVING FORM - যা অবশ্যই করতে হবে
═══════════════════════════════════════════════════════════════════

✅ Loan giving form এ BANK ACCOUNT SELECT FIELD যোগ করতে হবে:
   - এই field এ সব active bank accounts দেখাতে হবে
   - User যেকোনো account select করতে পারবে
   - এই account থেকে loan এর money debit হবে

✅ Form submit করার সময় এই field টি send করতে হবে:
   {
     ...সব loan fields,
     targetAccountId: selectedAccountId,  // এই field অবশ্যই থাকতে হবে!
     createdBy: userProfile?.email,
     branchId: userProfile?.branchId
   }

✅ Bank accounts fetch করার API:
   GET /bank-accounts
   Response: { success: true, accounts: [...] }
   
   Account object structure:
   {
     _id: "account_id",
     bankName: "Bank Name",
     accountNumber: "123456",
     currentBalance: 100000,
     currency: "BDT",
     status: "Active"
   }


═══════════════════════════════════════════════════════════════════
2. LOAN LIST PAGE - যা করতে হবে
═══════════════════════════════════════════════════════════════════

✅ Loans fetch করার API:
   GET /loans?loanDirection=giving&status=Active&page=1&limit=20
   
   Query Parameters:
   - loanDirection: 'giving' বা 'receiving'
   - status: 'Active', 'Pending', 'Closed'
   - branchId: branch filter
   - dateFrom, dateTo: date range
   - search: search term
   - page, limit: pagination

✅ প্রতিটি loan card এ দেখাতে হবে:
   - Loan ID
   - Full Name
   - Amount
   - Remaining Amount
   - Status
   - Created Date
   - "View Details" button
   - "Make Payment" button (যদি giving loan হয় এবং status Active)


═══════════════════════════════════════════════════════════════════
3. LOAN DETAILS PAGE - যা করতে হবে
═══════════════════════════════════════════════════════════════════

✅ Loan details fetch:
   GET /loans/:loanId
   
✅ Transaction history fetch:
   GET /api/transactions?loanId=LOANGDH2508290001
   
✅ এই page এ দেখাতে হবে:
   - Loan এর সব information
   - Current remaining amount
   - Transaction history list
   - Payment history (যদি থাকে)
   - "Record Payment" button (যদি giving loan হয়)


═══════════════════════════════════════════════════════════════════
4. LOAN PAYMENT FORM - যা করতে হবে
═══════════════════════════════════════════════════════════════════

⚠️ IMPORTANT: Loan payment endpoint এখনো backend এ নেই!
   Frontend তৈরি করুন, backend developer কে জানান endpoint তৈরি করতে হবে।

✅ Payment form fields:
   - Payment Amount (number)
   - Payment Date (date)
   - Bank Account Select (কোন account এ money credit হবে)
   - Payment Method (dropdown: bank-transfer, cash, etc.)
   - Notes (textarea)

✅ Form submit করার সময়:
   POST /loans/:loanId/payment
   {
     amount: 5000,
     paymentDate: "2024-01-15",
     paymentMethod: "bank-transfer",
     targetAccountId: "account_id",
     notes: "Partial payment",
     createdBy: userProfile?.email,
     branchId: userProfile?.branchId
   }

✅ Success হলে:
   - Loan remaining amount update হবে
   - Transaction create হবে
   - Success message show করুন
   - Loan details page refresh করুন


═══════════════════════════════════════════════════════════════════
5. LOAN RECEIVING (APPLICATION) FORM - যা করতে হবে
═══════════════════════════════════════════════════════════════════

✅ Loan application form:
   POST /loans/receiving
   
   এই form এ targetAccountId লাগবে না (loan approve হলে তখন transaction হবে)
   
✅ Form fields সব যা backend expect করে:
   - Personal information
   - Address information
   - Contact information
   - Loan details (amount, interest rate, duration, etc.)
   - Documents (NID images, profile photo)

✅ Submit করলে:
   - Loan create হবে status: 'Pending'
   - Success message show করুন
   - Loan list page এ redirect করুন


═══════════════════════════════════════════════════════════════════
6. LOAN APPROVAL (ADMIN) - যা করতে হবে
═══════════════════════════════════════════════════════════════════

⚠️ IMPORTANT: Loan approval endpoint এখনো backend এ নেই!
   Frontend তৈরি করুন, backend developer কে জানান endpoint তৈরি করতে হবে।

✅ Approval interface (Admin এর জন্য):
   - Loan details দেখান
   - Bank account select field (কোন account এ money credit হবে)
   - Approve button
   - Reject button (optional)

✅ Approve করার সময়:
   PATCH /loans/:loanId/approve
   {
     targetAccountId: "account_id",
     approvedBy: userProfile?.email
   }

✅ Success হলে:
   - Loan status 'Active' হবে
   - Transaction create হবে (CREDIT)
   - Success message show করুন


═══════════════════════════════════════════════════════════════════
7. TRANSACTION HISTORY DISPLAY - যা করতে হবে
═══════════════════════════════════════════════════════════════════

✅ Transaction list fetch:
   GET /api/transactions?loanId=LOANGDH2508290001
   
✅ প্রতিটি transaction card এ দেখাতে হবে:
   - Transaction ID
   - Date
   - Type (Debit/Credit)
   - Amount
   - Bank Account
   - Status
   - Reference/Loan ID

✅ Transaction details:
   - Transaction ID click করলে details page এ যাওয়া
   - বা modal এ details show করা


═══════════════════════════════════════════════════════════════════
8. IMPORTANT NOTES - মনে রাখুন!
═══════════════════════════════════════════════════════════════════

✅ যা BACKEND এ আছে:
   - POST /loans/giving (transaction auto-create)
   - POST /loans/receiving (loan application)
   - GET /loans (all loans with filters)
   - GET /loans/:id (specific loan)
   - GET /api/transactions?loanId=xxx (transactions by loan ID)
   - GET /bank-accounts (all bank accounts)

❌ যা BACKEND এ এখনো নেই (Backend Developer কে জানান):
   - POST /loans/:loanId/payment (loan payment record)
   - PATCH /loans/:loanId/approve (loan approval)
   - PATCH /loans/:loanId (loan update)
   - GET /loans/:loanId/transactions (loan transactions directly)

✅ যা FRONTEND এ করতে হবে:
   1. Loan giving form এ bank account select field
   2. Loan list page (with filters and pagination)
   3. Loan details page (with transaction history)
   4. Loan payment form
   5. Loan approval interface (Admin)
   6. Transaction history display
   7. Bank account selection component (reusable)

✅ Error Handling:
   - সব API call এ try-catch use করুন
   - Error messages user-friendly করুন
   - Loading states show করুন
   - Success/Error notifications show করুন (SweetAlert2 বা toast)

✅ Form Validation:
   - Client-side validation করুন
   - Backend validation error handle করুন
   - Phone number format check করুন
   - Email format check করুন
   - Amount validation করুন


═══════════════════════════════════════════════════════════════════
9. COMPLETE FLOW - কিভাবে কাজ করবে
═══════════════════════════════════════════════════════════════════

FLOW 1: LOAN GIVING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. User loan giving form fill up করে
2. Bank account select করে (targetAccountId)
3. Form submit করে
4. Backend loan create করে + transaction create করে (automatic)
5. Bank account balance update হয়
6. Success message show হয়
7. Loan list page এ redirect হয়

FLOW 2: LOAN PAYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. User loan details page এ যায়
2. "Make Payment" button click করে
3. Payment form open হয়
4. Payment amount ও bank account select করে
5. Form submit করে
6. Backend payment record করে + transaction create করে
7. Loan remaining amount update হয়
8. Bank account balance update হয়
9. Success message show হয়
10. Loan details refresh হয়

FLOW 3: LOAN RECEIVING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. User loan application form fill up করে
2. Form submit করে
3. Loan create হয় status: 'Pending'
4. Admin review করে
5. Admin loan approve করে (bank account select করে)
6. Backend loan status update করে + transaction create করে
7. Bank account balance update হয়
8. Success message show হয়


═══════════════════════════════════════════════════════════════════
10. TESTING CHECKLIST
═══════════════════════════════════════════════════════════════════

✅ Test করতে হবে:
   [ ] Loan giving form - bank account select
   [ ] Loan giving submit - transaction create হয় কিনা
   [ ] Loan list page - সব loans দেখায় কিনা
   [ ] Loan details page - loan info দেখায় কিনা
   [ ] Transaction history - loan এর transactions দেখায় কিনা
   [ ] Loan payment form - payment submit হয় কিনা
   [ ] Loan approval - approval কাজ করে কিনা
   [ ] Bank account balance - update হয় কিনা
   [ ] Error handling - সব error properly handle হয় কিনা
   [ ] Loading states - সব API call এ loading show হয় কিনা


═══════════════════════════════════════════════════════════════════

এই guide follow করলে loan system সম্পূর্ণ transaction track করতে পারবে! 🎯

যদি কোনো question থাকে, backend developer কে জানান।

═══════════════════════════════════════════════════════════════════

